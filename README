These are translations, into 8086 assembly language, of episodes 1, 2 and 3 of Jill of the Jungle.
There is enough information to carry this through to a decompilation back into Turbo C;
with many of the names of the routines and files restored.

Some notes on the game, its implementation and the 80x86 family:
∙	Most of Jill, parts 1, 2 and 3, were written in C using the Turbo C compiler,
	which was popular for PC programmers in the 1980's and 1990's.
∙	Episode 1 was originally distributed as Shareware, Episodes 2 and 3 commercially.
	All 3 episodes are now freely-downloadable, e.g. at
		https://www.gog.com/game/jill_of_the_jungle_the_complete_trilogy
∙	Turbo C was made by Borland, who later made Turbo C++, and is apparently now under GPL.
	This is described in further detail on this page
		https://www.sandroid.org/TurboC/#Introduction
	which also discusses porting Turbo C programs to GCC.
∙	Parts of Jill were written directly in the machine language of the Intel 8086 family.
∙	The 8086 family evolved from the 4040, 8080, 8086, through 80186, 80286, 80386, 80486, 80586,
	after which non-numeric names were used, starting with Pentium in place of 80586.
	The 8080 legacy lives on as the octal-based coding used for the 80x86 operations.
∙	Other people created clones and used the 80*86 names.
∙	The 80386 is where multitasking was added to the processor around 1985-1990. That's when Windows appeared on PC's.
	None of this is used in the Jill games ― it is DOS-only, not Windows-based.
∙	A single program can also multitask. That is called multi-threading.
	This was not made a standard part of C or C++, however, until 2011.
∙	It may be possible to port Jill into QT as a multi-threaded application.
